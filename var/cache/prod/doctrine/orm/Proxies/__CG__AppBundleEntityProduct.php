<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \AppBundle\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'teacher_id', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'group_name', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'league_name', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'feedback', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'assets', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'virtual_money', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'start_date', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'end_date', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'created_by', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'created_at', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'updated_by', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'updated_at'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'teacher_id', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'group_name', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'league_name', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'feedback', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'assets', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'virtual_money', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'start_date', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'end_date', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'created_by', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'created_at', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'updated_by', '' . "\0" . 'AppBundle\\Entity\\Product' . "\0" . 'updated_at'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeacher_id()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeacher_id', []);

        return parent::getTeacher_id();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeacher_id($teacher_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeacher_id', [$teacher_id]);

        return parent::setTeacher_id($teacher_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroup_name()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroup_name', []);

        return parent::getGroup_name();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroup_name($group_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroup_name', [$group_name]);

        return parent::setGroup_name($group_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeague_name()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeague_name', []);

        return parent::getLeague_name();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeague_name($league_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeague_name', [$league_name]);

        return parent::setLeague_name($league_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeedback()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeedback', []);

        return parent::getFeedback();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeedback($feedback)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeedback', [$feedback]);

        return parent::setFeedback($feedback);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssets', []);

        return parent::getAssets();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssets($assets)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssets', [$assets]);

        return parent::setAssets($assets);
    }

    /**
     * {@inheritDoc}
     */
    public function getVirtual_money()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVirtual_money', []);

        return parent::getVirtual_money();
    }

    /**
     * {@inheritDoc}
     */
    public function setVirtual_money($virtual_money)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVirtual_money', [$virtual_money]);

        return parent::setVirtual_money($virtual_money);
    }

    /**
     * {@inheritDoc}
     */
    public function getStart_date()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStart_date', []);

        return parent::getStart_date();
    }

    /**
     * {@inheritDoc}
     */
    public function setStart_date($start_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStart_date', [$start_date]);

        return parent::setStart_date($start_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnd_date()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnd_date', []);

        return parent::getEnd_date();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnd_date($end_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnd_date', [$end_date]);

        return parent::setEnd_date($end_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated_by()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated_by', []);

        return parent::getCreated_by();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated_by($created_by)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated_by', [$created_by]);

        return parent::setCreated_by($created_by);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated_at()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated_at', []);

        return parent::getCreated_at();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated_at($created_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated_at', [$created_at]);

        return parent::setCreated_at($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated_by()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated_by', []);

        return parent::getUpdated_by();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated_by($updated_by)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated_by', [$updated_by]);

        return parent::setUpdated_by($updated_by);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated_at()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated_at', []);

        return parent::getUpdated_at();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated_at($updated_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated_at', [$updated_at]);

        return parent::setUpdated_at($updated_at);
    }

}
