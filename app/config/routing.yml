app:
    resource: '@AppBundle/Controller/'
    type: annotation
    defaults:
        _format: json
fos_user:
    resource: "@FOSUserBundle/Resources/config/routing/all.xml"


#APIs

# no sesion needed 
home:
    path:     /index
    defaults: { _controller: AppBundle:Default:home }

teachersignup:
    path:     /anon/teacher/signup
    defaults: { _controller: AppBundle:Default:signupTeacher }
    methods:  [POST]

teachersignupverify:
    path:     anon/teacher/verify/{verifyLink}
    defaults: { _controller: AppBundle:Default:verifySignupteacher}
    methods:  [GET]
studentsignupverify:
    path:     anon/student/verify/{verifyLink}
    defaults: { _controller: AppBundle:Default:verifySignupStudent}
    methods:  [GET]
login:
    path:     anon/login
    defaults: { _controller: AppBundle:Login:login}
    methods:  [POST] 
emailupdateteacherverify:
    path:     anon/teacher/emailchange/{verifyLink}
    defaults: { _controller: AppBundle:Default:emailChangeTeacherVerify}
    methods:  [GET]
forgotpassword:
    path:     anon/forgotpassword
    defaults: { _controller: AppBundle:Default:forgotPassword}
    methods:  [POST]
forgotpasswordverify:
    path:     /anon/forgotpasswordverify/{verifyLink}
    defaults: { _controller: AppBundle:Default:forgotPasswordVerify}
    methods:  [GET]



# auth 

#teacher only
teacherdetails:
    path:     api/getteacherdetails/{tid}
    defaults: { _controller: AppBundle:University:teacherProfile }
    methods:  [GET]

teacherstatus:
    path:     /api/teacher/status
    defaults: { _controller: AppBundle:University:teacherStatus }
    methods:  [POST]

saveteacher:
    path:     /api/saveteacher
    defaults: { _controller: AppBundle:University:saveTeacher }
    methods:  [POST]

updateteacher:
    path:     /api/teacher/update
    defaults: { _controller: AppBundle:University:updateTeacher }
    methods:  [POST]
avatar:
    path:     /api/avatar
    defaults: { _controller: AppBundle:University:avatar }
    methods:  [POST]
currentpasswordcheck:
    path:     /api/password/current
    defaults: { _controller: AppBundle:UserOperations:checkCurrentPassword }
    methods:  [POST] 
updatePasswordCheck:
    path:     /api/password/update
    defaults: { _controller: AppBundle:UserOperations:updatePassword }
    methods:  [POST] 



#timeline
usergroupops:
    path:     /api/getUserOperations/{tid}
    defaults: { _controller: AppBundle:UserOperations:getUserOperations }
    methods:  [GET]
comment:
    path:     /api/timeline/postComment
    defaults: { _controller: AppBundle:UserOperations:comment }
    methods:  [POST]
like:
    path:     /api/timeline/postLike
    defaults: { _controller: AppBundle:UserOperations:like }
    methods:  [POST]
commentlike:
    path:     /api/timeline/postCommentLike
    defaults: { _controller: AppBundle:UserOperations:commentLike }
    methods:  [POST]



# ranking
dashboard :
    path :     /api/ranking/dashboard
    defaults: { _controller: AppBundle:Ranking:dashboard }
    methods:  [POST]
ranking :
    path :     /api/ranking/load
    defaults: { _controller: AppBundle:Ranking:show }
    methods:  [POST]
studenData :
    path :     /api/ranking/student
    defaults: { _controller: AppBundle:Ranking:studentData }
    methods:  [POST]
rankingList :
    path :     /api/ranking/list
    defaults: { _controller: AppBundle:Ranking:rankingList }
    methods:  [POST]
leaguedata:
    path:     /api/league/details
    defaults: { _controller: AppBundle:UserOperations:getLeagueById }
    methods:  [POST]

# feedback
feedbackdata:
    path:     api/feedback/load
    defaults: { _controller: AppBundle:Feedback:show}
    methods:  [POST] 



# ranking actions
addstudents :
    path :     /api/addstudents
    defaults: { _controller: AppBundle:UserOperations:addStudents }
    methods:  [POST]
removeFromGroup :
    path :     /api/student/removeFromGroup
    defaults: { _controller: AppBundle:UserOperations:removeFromGroup }
    methods:  [POST] 
leagueupdate:
    path:     /api/league/update
    defaults: { _controller: AppBundle:UserOperations:updateLeague }
    methods:  [POST]  
feedbackupdate:
    path:     /api/feedback/update
    defaults: { _controller: AppBundle:UserOperations:updateFeedback }
    methods:  [POST] 



# chat
getchatbyuser:
    path:     api/chat/get
    defaults: { _controller: AppBundle:Ranking:getChat}
    methods:  [POST] 
sendmessage :
    path:     api/chat/send
    defaults: { _controller: AppBundle:Ranking:sendMessage}
    methods:  [POST] 


    